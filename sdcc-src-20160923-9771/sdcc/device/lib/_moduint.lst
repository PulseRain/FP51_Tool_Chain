                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module _moduint
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __moduint_PARM_2
                                     12 	.globl __moduint
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
      000000                         56 __moduint_PARM_2:
      000000                         57 	.ds 2
      000002                         58 __moduint_a_1_1:
      000002                         59 	.ds 2
      000004                         60 __moduint_count_1_2:
      000004                         61 	.ds 1
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
                                     70 	.area HOME    (CODE)
                                     71 	.area GSINIT0 (CODE)
                                     72 	.area GSINIT1 (CODE)
                                     73 	.area GSINIT2 (CODE)
                                     74 	.area GSINIT3 (CODE)
                                     75 	.area GSINIT4 (CODE)
                                     76 	.area GSINIT5 (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area CSEG    (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; global & static initialisations
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area GSINIT  (CODE)
                                     85 	.area GSFINAL (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 ;--------------------------------------------------------
                                     88 ; Home
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME    (CODE)
                                     91 	.area HOME    (CODE)
                                     92 ;--------------------------------------------------------
                                     93 ; code
                                     94 ;--------------------------------------------------------
                                     95 	.area CSEG    (CODE)
                                     96 ;------------------------------------------------------------
                                     97 ;Allocation info for local variables in function '_moduint'
                                     98 ;------------------------------------------------------------
                                     99 ;b                         Allocated with name '__moduint_PARM_2'
                                    100 ;a                         Allocated with name '__moduint_a_1_1'
                                    101 ;count                     Allocated with name '__moduint_count_1_2'
                                    102 ;------------------------------------------------------------
                                    103 ;	_moduint.c:173: _moduint (unsigned int a, unsigned int b)
                                    104 ;	-----------------------------------------
                                    105 ;	 function _moduint
                                    106 ;	-----------------------------------------
      000000                        107 __moduint:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
      000000 AF 83            [24]  116 	mov	r7,dph
      000002 E5 82            [12]  117 	mov	a,dpl
      000004 90r00r02         [24]  118 	mov	dptr,#__moduint_a_1_1
      000007 F0               [24]  119 	movx	@dptr,a
      000008 EF               [12]  120 	mov	a,r7
      000009 A3               [24]  121 	inc	dptr
      00000A F0               [24]  122 	movx	@dptr,a
                                    123 ;	_moduint.c:175: unsigned char count = 0;
      00000B 90r00r04         [24]  124 	mov	dptr,#__moduint_count_1_2
      00000E E4               [12]  125 	clr	a
      00000F F0               [24]  126 	movx	@dptr,a
                                    127 ;	_moduint.c:177: while (!MSB_SET(b))
      000010 90r00r02         [24]  128 	mov	dptr,#__moduint_a_1_1
      000013 E0               [24]  129 	movx	a,@dptr
      000014 FE               [12]  130 	mov	r6,a
      000015 A3               [24]  131 	inc	dptr
      000016 E0               [24]  132 	movx	a,@dptr
      000017 FF               [12]  133 	mov	r7,a
      000018 7D 00            [12]  134 	mov	r5,#0x00
      00001A                        135 00103$:
      00001A 90r00r00         [24]  136 	mov	dptr,#__moduint_PARM_2
      00001D E0               [24]  137 	movx	a,@dptr
      00001E FB               [12]  138 	mov	r3,a
      00001F A3               [24]  139 	inc	dptr
      000020 E0               [24]  140 	movx	a,@dptr
      000021 FC               [12]  141 	mov	r4,a
      000022 23               [12]  142 	rl	a
      000023 54 01            [12]  143 	anl	a,#0x01
      000025 FA               [12]  144 	mov	r2,a
      000026 70 37            [24]  145 	jnz	00117$
                                    146 ;	_moduint.c:179: b <<= 1;
      000028 EC               [12]  147 	mov	a,r4
      000029 CB               [12]  148 	xch	a,r3
      00002A 25 E0            [12]  149 	add	a,acc
      00002C CB               [12]  150 	xch	a,r3
      00002D 33               [12]  151 	rlc	a
      00002E FC               [12]  152 	mov	r4,a
      00002F 90r00r00         [24]  153 	mov	dptr,#__moduint_PARM_2
      000032 EB               [12]  154 	mov	a,r3
      000033 F0               [24]  155 	movx	@dptr,a
      000034 EC               [12]  156 	mov	a,r4
      000035 A3               [24]  157 	inc	dptr
      000036 F0               [24]  158 	movx	@dptr,a
                                    159 ;	_moduint.c:180: if (b > a)
      000037 90r00r00         [24]  160 	mov	dptr,#__moduint_PARM_2
      00003A E0               [24]  161 	movx	a,@dptr
      00003B FB               [12]  162 	mov	r3,a
      00003C A3               [24]  163 	inc	dptr
      00003D E0               [24]  164 	movx	a,@dptr
      00003E FC               [12]  165 	mov	r4,a
      00003F C3               [12]  166 	clr	c
      000040 EE               [12]  167 	mov	a,r6
      000041 9B               [12]  168 	subb	a,r3
      000042 EF               [12]  169 	mov	a,r7
      000043 9C               [12]  170 	subb	a,r4
      000044 50 11            [24]  171 	jnc	00102$
                                    172 ;	_moduint.c:182: b >>=1;
      000046 EC               [12]  173 	mov	a,r4
      000047 C3               [12]  174 	clr	c
      000048 13               [12]  175 	rrc	a
      000049 CB               [12]  176 	xch	a,r3
      00004A 13               [12]  177 	rrc	a
      00004B CB               [12]  178 	xch	a,r3
      00004C FC               [12]  179 	mov	r4,a
      00004D 90r00r00         [24]  180 	mov	dptr,#__moduint_PARM_2
      000050 EB               [12]  181 	mov	a,r3
      000051 F0               [24]  182 	movx	@dptr,a
      000052 EC               [12]  183 	mov	a,r4
      000053 A3               [24]  184 	inc	dptr
      000054 F0               [24]  185 	movx	@dptr,a
                                    186 ;	_moduint.c:183: break;
      000055 80 08            [24]  187 	sjmp	00117$
      000057                        188 00102$:
                                    189 ;	_moduint.c:185: count++;
      000057 0D               [12]  190 	inc	r5
      000058 90r00r04         [24]  191 	mov	dptr,#__moduint_count_1_2
      00005B ED               [12]  192 	mov	a,r5
      00005C F0               [24]  193 	movx	@dptr,a
                                    194 ;	_moduint.c:187: do
      00005D 80 BB            [24]  195 	sjmp	00103$
      00005F                        196 00117$:
      00005F 90r00r04         [24]  197 	mov	dptr,#__moduint_count_1_2
      000062 E0               [24]  198 	movx	a,@dptr
      000063 FF               [12]  199 	mov	r7,a
      000064                        200 00108$:
                                    201 ;	_moduint.c:189: if (a >= b)
      000064 90r00r02         [24]  202 	mov	dptr,#__moduint_a_1_1
      000067 E0               [24]  203 	movx	a,@dptr
      000068 FD               [12]  204 	mov	r5,a
      000069 A3               [24]  205 	inc	dptr
      00006A E0               [24]  206 	movx	a,@dptr
      00006B FE               [12]  207 	mov	r6,a
      00006C 90r00r00         [24]  208 	mov	dptr,#__moduint_PARM_2
      00006F E0               [24]  209 	movx	a,@dptr
      000070 FB               [12]  210 	mov	r3,a
      000071 A3               [24]  211 	inc	dptr
      000072 E0               [24]  212 	movx	a,@dptr
      000073 FC               [12]  213 	mov	r4,a
      000074 C3               [12]  214 	clr	c
      000075 ED               [12]  215 	mov	a,r5
      000076 9B               [12]  216 	subb	a,r3
      000077 EE               [12]  217 	mov	a,r6
      000078 9C               [12]  218 	subb	a,r4
      000079 40 0B            [24]  219 	jc	00107$
                                    220 ;	_moduint.c:190: a -= b;
      00007B 90r00r02         [24]  221 	mov	dptr,#__moduint_a_1_1
      00007E ED               [12]  222 	mov	a,r5
      00007F C3               [12]  223 	clr	c
      000080 9B               [12]  224 	subb	a,r3
      000081 F0               [24]  225 	movx	@dptr,a
      000082 EE               [12]  226 	mov	a,r6
      000083 9C               [12]  227 	subb	a,r4
      000084 A3               [24]  228 	inc	dptr
      000085 F0               [24]  229 	movx	@dptr,a
      000086                        230 00107$:
                                    231 ;	_moduint.c:191: b >>= 1;
      000086 90r00r00         [24]  232 	mov	dptr,#__moduint_PARM_2
      000089 E0               [24]  233 	movx	a,@dptr
      00008A FD               [12]  234 	mov	r5,a
      00008B A3               [24]  235 	inc	dptr
      00008C E0               [24]  236 	movx	a,@dptr
      00008D C3               [12]  237 	clr	c
      00008E 13               [12]  238 	rrc	a
      00008F CD               [12]  239 	xch	a,r5
      000090 13               [12]  240 	rrc	a
      000091 CD               [12]  241 	xch	a,r5
      000092 FE               [12]  242 	mov	r6,a
      000093 90r00r00         [24]  243 	mov	dptr,#__moduint_PARM_2
      000096 ED               [12]  244 	mov	a,r5
      000097 F0               [24]  245 	movx	@dptr,a
      000098 EE               [12]  246 	mov	a,r6
      000099 A3               [24]  247 	inc	dptr
      00009A F0               [24]  248 	movx	@dptr,a
                                    249 ;	_moduint.c:193: while (count--);
      00009B 8F 06            [24]  250 	mov	ar6,r7
      00009D 1F               [12]  251 	dec	r7
      00009E EE               [12]  252 	mov	a,r6
      00009F 70 C3            [24]  253 	jnz	00108$
                                    254 ;	_moduint.c:194: return a;
      0000A1 90r00r02         [24]  255 	mov	dptr,#__moduint_a_1_1
      0000A4 E0               [24]  256 	movx	a,@dptr
      0000A5 FE               [12]  257 	mov	r6,a
      0000A6 A3               [24]  258 	inc	dptr
      0000A7 E0               [24]  259 	movx	a,@dptr
      0000A8 8E 82            [24]  260 	mov	dpl,r6
      0000AA F5 83            [12]  261 	mov	dph,a
      0000AC 22               [24]  262 	ret
                                    263 	.area CSEG    (CODE)
                                    264 	.area CONST   (CODE)
                                    265 	.area XINIT   (CODE)
                                    266 	.area CABS    (ABS,CODE)
