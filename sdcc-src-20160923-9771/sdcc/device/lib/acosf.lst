                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module acosf
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _asincosf
                                     12 	.globl _acosf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'acosf'
                                     92 ;------------------------------------------------------------
                                     93 ;x                         Allocated to stack - _bpx +0
                                     94 ;------------------------------------------------------------
                                     95 ;	acosf.c:36: float acosf(float x) _FLOAT_FUNC_REENTRANT
                                     96 ;	-----------------------------------------
                                     97 ;	 function acosf
                                     98 ;	-----------------------------------------
      000000                         99 _acosf:
                           000007   100 	ar7 = 0x07
                           000006   101 	ar6 = 0x06
                           000005   102 	ar5 = 0x05
                           000004   103 	ar4 = 0x04
                           000003   104 	ar3 = 0x03
                           000002   105 	ar2 = 0x02
                           000001   106 	ar1 = 0x01
                           000000   107 	ar0 = 0x00
      000000 A8*00            [24]  108 	mov	r0,_spx
      000002 05*00            [12]  109 	inc	_spx
      000004 C5*00            [12]  110 	xch	a,_bpx
      000006 F2               [24]  111 	movx	@r0,a
      000007 08               [12]  112 	inc	r0
      000008 E8               [12]  113 	mov	a,r0
      000009 C5*00            [12]  114 	xch	a,_bpx
      00000B 05*00            [12]  115 	inc	_spx
      00000D 05*00            [12]  116 	inc	_spx
      00000F 05*00            [12]  117 	inc	_spx
      000011 05*00            [12]  118 	inc	_spx
      000013 AF 82            [24]  119 	mov	r7,dpl
      000015 AE 83            [24]  120 	mov	r6,dph
      000017 AD F0            [24]  121 	mov	r5,b
      000019 FC               [12]  122 	mov	r4,a
      00001A A8*00            [24]  123 	mov	r0,_bpx
      00001C EF               [12]  124 	mov	a,r7
      00001D F2               [24]  125 	movx	@r0,a
      00001E 08               [12]  126 	inc	r0
      00001F EE               [12]  127 	mov	a,r6
      000020 F2               [24]  128 	movx	@r0,a
      000021 08               [12]  129 	inc	r0
      000022 ED               [12]  130 	mov	a,r5
      000023 F2               [24]  131 	movx	@r0,a
      000024 08               [12]  132 	inc	r0
      000025 EC               [12]  133 	mov	a,r4
      000026 F2               [24]  134 	movx	@r0,a
                                    135 ;	acosf.c:38: if (x == 1.0) return 0.0;
      000027 A8*00            [24]  136 	mov	r0,_bpx
      000029 E2               [24]  137 	movx	a,@r0
      00002A FC               [12]  138 	mov	r4,a
      00002B 08               [12]  139 	inc	r0
      00002C E2               [24]  140 	movx	a,@r0
      00002D FD               [12]  141 	mov	r5,a
      00002E 08               [12]  142 	inc	r0
      00002F E2               [24]  143 	movx	a,@r0
      000030 FE               [12]  144 	mov	r6,a
      000031 08               [12]  145 	inc	r0
      000032 E2               [24]  146 	movx	a,@r0
      000033 FF               [12]  147 	mov	r7,a
      000034 90r00r00         [24]  148 	mov	dptr,#___fseq_PARM_2
      000037 E4               [12]  149 	clr	a
      000038 F0               [24]  150 	movx	@dptr,a
      000039 A3               [24]  151 	inc	dptr
      00003A F0               [24]  152 	movx	@dptr,a
      00003B 74 80            [12]  153 	mov	a,#0x80
      00003D A3               [24]  154 	inc	dptr
      00003E F0               [24]  155 	movx	@dptr,a
      00003F 74 3F            [12]  156 	mov	a,#0x3f
      000041 A3               [24]  157 	inc	dptr
      000042 F0               [24]  158 	movx	@dptr,a
      000043 C0 00            [24]  159 	push	ar0
      000045 E5*00            [12]  160 	mov	a,_spx
      000047 F8               [12]  161 	mov	r0,a
      000048 24 04            [12]  162 	add	a,#0x04
      00004A F5*00            [12]  163 	mov	_spx,a
      00004C EF               [12]  164 	mov	a,r7
      00004D F2               [24]  165 	movx	@r0,a
      00004E 08               [12]  166 	inc	r0
      00004F EE               [12]  167 	mov	a,r6
      000050 F2               [24]  168 	movx	@r0,a
      000051 08               [12]  169 	inc	r0
      000052 ED               [12]  170 	mov	a,r5
      000053 F2               [24]  171 	movx	@r0,a
      000054 08               [12]  172 	inc	r0
      000055 EC               [12]  173 	mov	a,r4
      000056 F2               [24]  174 	movx	@r0,a
      000057 D0 00            [24]  175 	pop	ar0
      000059 8C 82            [24]  176 	mov	dpl,r4
      00005B 8D 83            [24]  177 	mov	dph,r5
      00005D 8E F0            [24]  178 	mov	b,r6
      00005F EF               [12]  179 	mov	a,r7
      000060 12r00r00         [24]  180 	lcall	___fseq
      000063 E5 82            [12]  181 	mov	a,dpl
      000065 C0 E0            [24]  182 	push	acc
      000067 A8*00            [24]  183 	mov	r0,_spx
      000069 18               [12]  184 	dec	r0
      00006A E2               [24]  185 	movx	a,@r0
      00006B FC               [12]  186 	mov	r4,a
      00006C 18               [12]  187 	dec	r0
      00006D E2               [24]  188 	movx	a,@r0
      00006E FD               [12]  189 	mov	r5,a
      00006F 18               [12]  190 	dec	r0
      000070 E2               [24]  191 	movx	a,@r0
      000071 FE               [12]  192 	mov	r6,a
      000072 18               [12]  193 	dec	r0
      000073 E2               [24]  194 	movx	a,@r0
      000074 FF               [12]  195 	mov	r7,a
      000075 88*00            [24]  196 	mov	_spx,r0
      000077 D0 E0            [24]  197 	pop	acc
      000079 60 09            [24]  198 	jz	00108$
      00007B 90 00 00         [24]  199 	mov	dptr,#(0x00&0x00ff)
      00007E E4               [12]  200 	clr	a
      00007F F5 F0            [12]  201 	mov	b,a
      000081 02r01r05         [24]  202 	ljmp	00110$
      000084                        203 00108$:
                                    204 ;	acosf.c:39: else if (x ==-1.0) return PI;
      000084 90r00r00         [24]  205 	mov	dptr,#___fseq_PARM_2
      000087 E4               [12]  206 	clr	a
      000088 F0               [24]  207 	movx	@dptr,a
      000089 A3               [24]  208 	inc	dptr
      00008A F0               [24]  209 	movx	@dptr,a
      00008B 74 80            [12]  210 	mov	a,#0x80
      00008D A3               [24]  211 	inc	dptr
      00008E F0               [24]  212 	movx	@dptr,a
      00008F 74 BF            [12]  213 	mov	a,#0xbf
      000091 A3               [24]  214 	inc	dptr
      000092 F0               [24]  215 	movx	@dptr,a
      000093 C0 00            [24]  216 	push	ar0
      000095 E5*00            [12]  217 	mov	a,_spx
      000097 F8               [12]  218 	mov	r0,a
      000098 24 04            [12]  219 	add	a,#0x04
      00009A F5*00            [12]  220 	mov	_spx,a
      00009C EF               [12]  221 	mov	a,r7
      00009D F2               [24]  222 	movx	@r0,a
      00009E 08               [12]  223 	inc	r0
      00009F EE               [12]  224 	mov	a,r6
      0000A0 F2               [24]  225 	movx	@r0,a
      0000A1 08               [12]  226 	inc	r0
      0000A2 ED               [12]  227 	mov	a,r5
      0000A3 F2               [24]  228 	movx	@r0,a
      0000A4 08               [12]  229 	inc	r0
      0000A5 EC               [12]  230 	mov	a,r4
      0000A6 F2               [24]  231 	movx	@r0,a
      0000A7 D0 00            [24]  232 	pop	ar0
      0000A9 8C 82            [24]  233 	mov	dpl,r4
      0000AB 8D 83            [24]  234 	mov	dph,r5
      0000AD 8E F0            [24]  235 	mov	b,r6
      0000AF EF               [12]  236 	mov	a,r7
      0000B0 12r00r00         [24]  237 	lcall	___fseq
      0000B3 E5 82            [12]  238 	mov	a,dpl
      0000B5 C0 E0            [24]  239 	push	acc
      0000B7 A8*00            [24]  240 	mov	r0,_spx
      0000B9 18               [12]  241 	dec	r0
      0000BA E2               [24]  242 	movx	a,@r0
      0000BB FC               [12]  243 	mov	r4,a
      0000BC 18               [12]  244 	dec	r0
      0000BD E2               [24]  245 	movx	a,@r0
      0000BE FD               [12]  246 	mov	r5,a
      0000BF 18               [12]  247 	dec	r0
      0000C0 E2               [24]  248 	movx	a,@r0
      0000C1 FE               [12]  249 	mov	r6,a
      0000C2 18               [12]  250 	dec	r0
      0000C3 E2               [24]  251 	movx	a,@r0
      0000C4 FF               [12]  252 	mov	r7,a
      0000C5 88*00            [24]  253 	mov	_spx,r0
      0000C7 D0 E0            [24]  254 	pop	acc
      0000C9 60 0A            [24]  255 	jz	00105$
      0000CB 90 0F DB         [24]  256 	mov	dptr,#0x0fdb
      0000CE 75 F0 49         [24]  257 	mov	b,#0x49
      0000D1 74 40            [12]  258 	mov	a,#0x40
      0000D3 80 30            [24]  259 	sjmp	00110$
      0000D5                        260 00105$:
                                    261 ;	acosf.c:40: else if (x == 0.0) return HALF_PI;
      0000D5 8C F0            [24]  262 	mov	b,r4
      0000D7 ED               [12]  263 	mov	a,r5
      0000D8 42 F0            [12]  264 	orl	b,a
      0000DA EE               [12]  265 	mov	a,r6
      0000DB 42 F0            [12]  266 	orl	b,a
      0000DD EF               [12]  267 	mov	a,r7
      0000DE 54 7F            [12]  268 	anl	a,#0x7F
      0000E0 45 F0            [12]  269 	orl	a,b
      0000E2 70 0A            [24]  270 	jnz	00102$
      0000E4 90 0F DB         [24]  271 	mov	dptr,#0x0fdb
      0000E7 75 F0 C9         [24]  272 	mov	b,#0xc9
      0000EA 74 3F            [12]  273 	mov	a,#0x3f
      0000EC 80 17            [24]  274 	sjmp	00110$
      0000EE                        275 00102$:
                                    276 ;	acosf.c:41: else               return asincosf(x, true);
      0000EE 90r00r00         [24]  277 	mov	dptr,#_asincosf_PARM_2
      0000F1 74 01            [12]  278 	mov	a,#0x01
      0000F3 F0               [24]  279 	movx	@dptr,a
      0000F4 8C 82            [24]  280 	mov	dpl,r4
      0000F6 8D 83            [24]  281 	mov	dph,r5
      0000F8 8E F0            [24]  282 	mov	b,r6
      0000FA EF               [12]  283 	mov	a,r7
      0000FB 12r00r00         [24]  284 	lcall	_asincosf
      0000FE AC 82            [24]  285 	mov	r4,dpl
      000100 AD 83            [24]  286 	mov	r5,dph
      000102 AE F0            [24]  287 	mov	r6,b
      000104 FF               [12]  288 	mov	r7,a
      000105                        289 00110$:
      000105 C5*00            [12]  290 	xch	a,_bpx
      000107 F8               [12]  291 	mov	r0,a
      000108 18               [12]  292 	dec	r0
      000109 E2               [24]  293 	movx	a,@r0
      00010A C5*00            [12]  294 	xch	a,_bpx
      00010C 88*00            [24]  295 	mov	_spx,r0
      00010E 22               [24]  296 	ret
                                    297 	.area CSEG    (CODE)
                                    298 	.area CONST   (CODE)
                                    299 	.area XINIT   (CODE)
                                    300 	.area CABS    (ABS,CODE)
