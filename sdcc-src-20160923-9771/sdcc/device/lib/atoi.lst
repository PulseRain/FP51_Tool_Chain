                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module atoi
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _aligned_alloc_PARM_2
                                     12 	.globl _atoi
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
      000000                         48 _atoi_sloc0_1_0:
      000000                         49 	.ds 1
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 _aligned_alloc_PARM_2:
      000000                         59 	.ds 2
      000002                         60 _atoi_nptr_1_41:
      000002                         61 	.ds 3
      000005                         62 _atoi_ret_1_42:
      000005                         63 	.ds 2
      000007                         64 _atoi_neg_1_42:
      000007                         65 	.ds 1
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'atoi'
                                    102 ;------------------------------------------------------------
                                    103 ;nptr                      Allocated with name '_atoi_nptr_1_41'
                                    104 ;__00010004                Allocated with name '_atoi___00010004_4_48'
                                    105 ;__00010001                Allocated with name '_atoi___00010001_4_45'
                                    106 ;ret                       Allocated with name '_atoi_ret_1_42'
                                    107 ;neg                       Allocated with name '_atoi_neg_1_42'
                                    108 ;__00020002                Allocated with name '_atoi___00020002_3_44'
                                    109 ;c                         Allocated with name '_atoi_c_3_44'
                                    110 ;__00020005                Allocated with name '_atoi___00020005_3_47'
                                    111 ;c                         Allocated with name '_atoi_c_3_47'
                                    112 ;------------------------------------------------------------
                                    113 ;	atoi.c:34: int atoi(const char *nptr)
                                    114 ;	-----------------------------------------
                                    115 ;	 function atoi
                                    116 ;	-----------------------------------------
      000000                        117 _atoi:
                           000007   118 	ar7 = 0x07
                           000006   119 	ar6 = 0x06
                           000005   120 	ar5 = 0x05
                           000004   121 	ar4 = 0x04
                           000003   122 	ar3 = 0x03
                           000002   123 	ar2 = 0x02
                           000001   124 	ar1 = 0x01
                           000000   125 	ar0 = 0x00
      000000 AF F0            [24]  126 	mov	r7,b
      000002 AE 83            [24]  127 	mov	r6,dph
      000004 E5 82            [12]  128 	mov	a,dpl
      000006 90r00r02         [24]  129 	mov	dptr,#_atoi_nptr_1_41
      000009 F0               [24]  130 	movx	@dptr,a
      00000A EE               [12]  131 	mov	a,r6
      00000B A3               [24]  132 	inc	dptr
      00000C F0               [24]  133 	movx	@dptr,a
      00000D EF               [12]  134 	mov	a,r7
      00000E A3               [24]  135 	inc	dptr
      00000F F0               [24]  136 	movx	@dptr,a
                                    137 ;	atoi.c:36: int ret = 0;
      000010 90r00r05         [24]  138 	mov	dptr,#_atoi_ret_1_42
      000013 E4               [12]  139 	clr	a
      000014 F0               [24]  140 	movx	@dptr,a
      000015 A3               [24]  141 	inc	dptr
      000016 F0               [24]  142 	movx	@dptr,a
                                    143 ;	atoi.c:39: while (isblank (*nptr))
      000017 90r00r02         [24]  144 	mov	dptr,#_atoi_nptr_1_41
      00001A E0               [24]  145 	movx	a,@dptr
      00001B FD               [12]  146 	mov	r5,a
      00001C A3               [24]  147 	inc	dptr
      00001D E0               [24]  148 	movx	a,@dptr
      00001E FE               [12]  149 	mov	r6,a
      00001F A3               [24]  150 	inc	dptr
      000020 E0               [24]  151 	movx	a,@dptr
      000021 FF               [12]  152 	mov	r7,a
      000022                        153 00101$:
      000022 8D 82            [24]  154 	mov	dpl,r5
      000024 8E 83            [24]  155 	mov	dph,r6
      000026 8F F0            [24]  156 	mov	b,r7
      000028 12r00r00         [24]  157 	lcall	__gptrget
      00002B FC               [12]  158 	mov	r4,a
      00002C 7B 00            [12]  159 	mov	r3,#0x00
                                    160 ;	C:/arc/Arduino_IDE/sdcc-src-20160923-9771/sdcc/bin_vc/../include/ctype.h:53: return ((unsigned char)c == ' ' || (unsigned char)c == '\t');
      00002E BC 20 02         [24]  161 	cjne	r4,#0x20,00147$
      000031 80 03            [24]  162 	sjmp	00115$
      000033                        163 00147$:
      000033 BC 09 12         [24]  164 	cjne	r4,#0x09,00131$
      000036                        165 00115$:
                                    166 ;	atoi.c:40: nptr++;
      000036 0D               [12]  167 	inc	r5
      000037 BD 00 01         [24]  168 	cjne	r5,#0x00,00150$
      00003A 0E               [12]  169 	inc	r6
      00003B                        170 00150$:
      00003B 90r00r02         [24]  171 	mov	dptr,#_atoi_nptr_1_41
      00003E ED               [12]  172 	mov	a,r5
      00003F F0               [24]  173 	movx	@dptr,a
      000040 EE               [12]  174 	mov	a,r6
      000041 A3               [24]  175 	inc	dptr
      000042 F0               [24]  176 	movx	@dptr,a
      000043 EF               [12]  177 	mov	a,r7
      000044 A3               [24]  178 	inc	dptr
      000045 F0               [24]  179 	movx	@dptr,a
      000046 80 DA            [24]  180 	sjmp	00101$
      000048                        181 00131$:
      000048 90r00r02         [24]  182 	mov	dptr,#_atoi_nptr_1_41
      00004B ED               [12]  183 	mov	a,r5
      00004C F0               [24]  184 	movx	@dptr,a
      00004D EE               [12]  185 	mov	a,r6
      00004E A3               [24]  186 	inc	dptr
      00004F F0               [24]  187 	movx	@dptr,a
      000050 EF               [12]  188 	mov	a,r7
      000051 A3               [24]  189 	inc	dptr
      000052 F0               [24]  190 	movx	@dptr,a
                                    191 ;	atoi.c:42: neg = (*nptr == '-');
      000053 8D 82            [24]  192 	mov	dpl,r5
      000055 8E 83            [24]  193 	mov	dph,r6
      000057 8F F0            [24]  194 	mov	b,r7
      000059 12r00r00         [24]  195 	lcall	__gptrget
      00005C FC               [12]  196 	mov	r4,a
      00005D 90r00r07         [24]  197 	mov	dptr,#_atoi_neg_1_42
      000060 E4               [12]  198 	clr	a
      000061 BC 2D 01         [24]  199 	cjne	r4,#0x2d,00151$
      000064 04               [12]  200 	inc	a
      000065                        201 00151$:
      000065 F0               [24]  202 	movx	@dptr,a
                                    203 ;	atoi.c:44: if (*nptr == '-' || *nptr == '+')
      000066 BC 2D 02         [24]  204 	cjne	r4,#0x2d,00153$
      000069 80 03            [24]  205 	sjmp	00104$
      00006B                        206 00153$:
      00006B BC 2B 0E         [24]  207 	cjne	r4,#0x2b,00129$
      00006E                        208 00104$:
                                    209 ;	atoi.c:45: nptr++;
      00006E 90r00r02         [24]  210 	mov	dptr,#_atoi_nptr_1_41
      000071 74 01            [12]  211 	mov	a,#0x01
      000073 2D               [12]  212 	add	a,r5
      000074 F0               [24]  213 	movx	@dptr,a
      000075 E4               [12]  214 	clr	a
      000076 3E               [12]  215 	addc	a,r6
      000077 A3               [24]  216 	inc	dptr
      000078 F0               [24]  217 	movx	@dptr,a
      000079 EF               [12]  218 	mov	a,r7
      00007A A3               [24]  219 	inc	dptr
      00007B F0               [24]  220 	movx	@dptr,a
                                    221 ;	atoi.c:47: while (isdigit (*nptr))
      00007C                        222 00129$:
      00007C 90r00r02         [24]  223 	mov	dptr,#_atoi_nptr_1_41
      00007F E0               [24]  224 	movx	a,@dptr
      000080 FD               [12]  225 	mov	r5,a
      000081 A3               [24]  226 	inc	dptr
      000082 E0               [24]  227 	movx	a,@dptr
      000083 FE               [12]  228 	mov	r6,a
      000084 A3               [24]  229 	inc	dptr
      000085 E0               [24]  230 	movx	a,@dptr
      000086 FF               [12]  231 	mov	r7,a
      000087                        232 00107$:
      000087 8D 82            [24]  233 	mov	dpl,r5
      000089 8E 83            [24]  234 	mov	dph,r6
      00008B 8F F0            [24]  235 	mov	b,r7
      00008D 12r00r00         [24]  236 	lcall	__gptrget
      000090 FC               [12]  237 	mov	r4,a
      000091 7B 00            [12]  238 	mov	r3,#0x00
                                    239 ;	C:/arc/Arduino_IDE/sdcc-src-20160923-9771/sdcc/bin_vc/../include/ctype.h:62: return ((unsigned char)c >= '0' && (unsigned char)c <= '9');
      000093 BC 30 00         [24]  240 	cjne	r4,#0x30,00156$
      000096                        241 00156$:
      000096 92*00            [24]  242 	mov	_atoi_sloc0_1_0,c
      000098 40 74            [24]  243 	jc	00132$
      00009A EC               [12]  244 	mov	a,r4
      00009B 24 C6            [12]  245 	add	a,#0xff - 0x39
      00009D 92*00            [24]  246 	mov	_atoi_sloc0_1_0,c
      00009F 40 6D            [24]  247 	jc	00132$
                                    248 ;	atoi.c:48: ret = ret * 10 + (*(nptr++) - '0');
      0000A1 90r00r05         [24]  249 	mov	dptr,#_atoi_ret_1_42
      0000A4 E0               [24]  250 	movx	a,@dptr
      0000A5 FB               [12]  251 	mov	r3,a
      0000A6 A3               [24]  252 	inc	dptr
      0000A7 E0               [24]  253 	movx	a,@dptr
      0000A8 FC               [12]  254 	mov	r4,a
      0000A9 90r00r00         [24]  255 	mov	dptr,#__mulint_PARM_2
      0000AC EB               [12]  256 	mov	a,r3
      0000AD F0               [24]  257 	movx	@dptr,a
      0000AE EC               [12]  258 	mov	a,r4
      0000AF A3               [24]  259 	inc	dptr
      0000B0 F0               [24]  260 	movx	@dptr,a
      0000B1 C0 00            [24]  261 	push	ar0
      0000B3 E5*00            [12]  262 	mov	a,_spx
      0000B5 F8               [12]  263 	mov	r0,a
      0000B6 24 03            [12]  264 	add	a,#0x03
      0000B8 F5*00            [12]  265 	mov	_spx,a
      0000BA EF               [12]  266 	mov	a,r7
      0000BB F2               [24]  267 	movx	@r0,a
      0000BC 08               [12]  268 	inc	r0
      0000BD EE               [12]  269 	mov	a,r6
      0000BE F2               [24]  270 	movx	@r0,a
      0000BF 08               [12]  271 	inc	r0
      0000C0 ED               [12]  272 	mov	a,r5
      0000C1 F2               [24]  273 	movx	@r0,a
      0000C2 D0 00            [24]  274 	pop	ar0
      0000C4 90 00 0A         [24]  275 	mov	dptr,#0x000a
      0000C7 12r00r00         [24]  276 	lcall	__mulint
      0000CA AB 82            [24]  277 	mov	r3,dpl
      0000CC AC 83            [24]  278 	mov	r4,dph
      0000CE A8*00            [24]  279 	mov	r0,_spx
      0000D0 18               [12]  280 	dec	r0
      0000D1 E2               [24]  281 	movx	a,@r0
      0000D2 FD               [12]  282 	mov	r5,a
      0000D3 18               [12]  283 	dec	r0
      0000D4 E2               [24]  284 	movx	a,@r0
      0000D5 FE               [12]  285 	mov	r6,a
      0000D6 18               [12]  286 	dec	r0
      0000D7 E2               [24]  287 	movx	a,@r0
      0000D8 FF               [12]  288 	mov	r7,a
      0000D9 88*00            [24]  289 	mov	_spx,r0
      0000DB 8D 82            [24]  290 	mov	dpl,r5
      0000DD 8E 83            [24]  291 	mov	dph,r6
      0000DF 8F F0            [24]  292 	mov	b,r7
      0000E1 12r00r00         [24]  293 	lcall	__gptrget
      0000E4 FA               [12]  294 	mov	r2,a
      0000E5 A3               [24]  295 	inc	dptr
      0000E6 AD 82            [24]  296 	mov	r5,dpl
      0000E8 AE 83            [24]  297 	mov	r6,dph
      0000EA 90r00r02         [24]  298 	mov	dptr,#_atoi_nptr_1_41
      0000ED ED               [12]  299 	mov	a,r5
      0000EE F0               [24]  300 	movx	@dptr,a
      0000EF EE               [12]  301 	mov	a,r6
      0000F0 A3               [24]  302 	inc	dptr
      0000F1 F0               [24]  303 	movx	@dptr,a
      0000F2 EF               [12]  304 	mov	a,r7
      0000F3 A3               [24]  305 	inc	dptr
      0000F4 F0               [24]  306 	movx	@dptr,a
      0000F5 8A 01            [24]  307 	mov	ar1,r2
      0000F7 7A 00            [12]  308 	mov	r2,#0x00
      0000F9 E9               [12]  309 	mov	a,r1
      0000FA 24 D0            [12]  310 	add	a,#0xd0
      0000FC F9               [12]  311 	mov	r1,a
      0000FD EA               [12]  312 	mov	a,r2
      0000FE 34 FF            [12]  313 	addc	a,#0xff
      000100 FA               [12]  314 	mov	r2,a
      000101 90r00r05         [24]  315 	mov	dptr,#_atoi_ret_1_42
      000104 E9               [12]  316 	mov	a,r1
      000105 2B               [12]  317 	add	a,r3
      000106 F0               [24]  318 	movx	@dptr,a
      000107 EA               [12]  319 	mov	a,r2
      000108 3C               [12]  320 	addc	a,r4
      000109 A3               [24]  321 	inc	dptr
      00010A F0               [24]  322 	movx	@dptr,a
      00010B 02r00r87         [24]  323 	ljmp	00107$
      00010E                        324 00132$:
      00010E 90r00r02         [24]  325 	mov	dptr,#_atoi_nptr_1_41
      000111 ED               [12]  326 	mov	a,r5
      000112 F0               [24]  327 	movx	@dptr,a
      000113 EE               [12]  328 	mov	a,r6
      000114 A3               [24]  329 	inc	dptr
      000115 F0               [24]  330 	movx	@dptr,a
      000116 EF               [12]  331 	mov	a,r7
      000117 A3               [24]  332 	inc	dptr
      000118 F0               [24]  333 	movx	@dptr,a
                                    334 ;	atoi.c:50: return (neg ? -ret : ret); // Since -INT_MIN is INT_MIN in sdcc, the result value always turns out ok.
      000119 90r00r07         [24]  335 	mov	dptr,#_atoi_neg_1_42
      00011C E0               [24]  336 	movx	a,@dptr
      00011D 60 11            [24]  337 	jz	00120$
      00011F 90r00r05         [24]  338 	mov	dptr,#_atoi_ret_1_42
      000122 E0               [24]  339 	movx	a,@dptr
      000123 FE               [12]  340 	mov	r6,a
      000124 A3               [24]  341 	inc	dptr
      000125 E0               [24]  342 	movx	a,@dptr
      000126 FF               [12]  343 	mov	r7,a
      000127 C3               [12]  344 	clr	c
      000128 E4               [12]  345 	clr	a
      000129 9E               [12]  346 	subb	a,r6
      00012A FE               [12]  347 	mov	r6,a
      00012B E4               [12]  348 	clr	a
      00012C 9F               [12]  349 	subb	a,r7
      00012D FF               [12]  350 	mov	r7,a
      00012E 80 08            [24]  351 	sjmp	00121$
      000130                        352 00120$:
      000130 90r00r05         [24]  353 	mov	dptr,#_atoi_ret_1_42
      000133 E0               [24]  354 	movx	a,@dptr
      000134 FE               [12]  355 	mov	r6,a
      000135 A3               [24]  356 	inc	dptr
      000136 E0               [24]  357 	movx	a,@dptr
      000137 FF               [12]  358 	mov	r7,a
      000138                        359 00121$:
      000138 8E 82            [24]  360 	mov	dpl,r6
      00013A 8F 83            [24]  361 	mov	dph,r7
      00013C 22               [24]  362 	ret
                                    363 	.area CSEG    (CODE)
                                    364 	.area CONST   (CODE)
                                    365 	.area XINIT   (CODE)
                                    366 	.area CABS    (ABS,CODE)
