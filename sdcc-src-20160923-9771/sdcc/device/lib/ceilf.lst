                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module ceilf
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ceilf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'ceilf'
                                     91 ;------------------------------------------------------------
                                     92 ;x                         Allocated to stack - _bpx +0
                                     93 ;r                         Allocated to stack - _bpx +4
                                     94 ;sloc0                     Allocated to stack - _bp +1
                                     95 ;sloc1                     Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	ceilf.c:33: float ceilf(float x) _FLOAT_FUNC_REENTRANT
                                     98 ;	-----------------------------------------
                                     99 ;	 function ceilf
                                    100 ;	-----------------------------------------
      000000                        101 _ceilf:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 A8*00            [24]  110 	mov	r0,_spx
      000002 05*00            [12]  111 	inc	_spx
      000004 C5*00            [12]  112 	xch	a,_bpx
      000006 F2               [24]  113 	movx	@r0,a
      000007 08               [12]  114 	inc	r0
      000008 E8               [12]  115 	mov	a,r0
      000009 C5*00            [12]  116 	xch	a,_bpx
      00000B C0*00            [24]  117 	push	_bp
      00000D 85 81*00         [24]  118 	mov	_bp,sp
      000010 C8               [12]  119 	xch	a,r0
      000011 E5 81            [12]  120 	mov	a,sp
      000013 24 08            [12]  121 	add	a,#0x08
      000015 F5 81            [12]  122 	mov	sp,a
      000017 C8               [12]  123 	xch	a,r0
      000018 05*00            [12]  124 	inc	_spx
      00001A 05*00            [12]  125 	inc	_spx
      00001C 05*00            [12]  126 	inc	_spx
      00001E 05*00            [12]  127 	inc	_spx
      000020 AF 82            [24]  128 	mov	r7,dpl
      000022 AE 83            [24]  129 	mov	r6,dph
      000024 AD F0            [24]  130 	mov	r5,b
      000026 FC               [12]  131 	mov	r4,a
      000027 A8*00            [24]  132 	mov	r0,_bpx
      000029 EF               [12]  133 	mov	a,r7
      00002A F2               [24]  134 	movx	@r0,a
      00002B 08               [12]  135 	inc	r0
      00002C EE               [12]  136 	mov	a,r6
      00002D F2               [24]  137 	movx	@r0,a
      00002E 08               [12]  138 	inc	r0
      00002F ED               [12]  139 	mov	a,r5
      000030 F2               [24]  140 	movx	@r0,a
      000031 08               [12]  141 	inc	r0
      000032 EC               [12]  142 	mov	a,r4
      000033 F2               [24]  143 	movx	@r0,a
                                    144 ;	ceilf.c:36: r=x;
      000034 A8*00            [24]  145 	mov	r0,_bpx
      000036 E5*00            [12]  146 	mov	a,_bp
      000038 24 05            [12]  147 	add	a,#0x05
      00003A F9               [12]  148 	mov	r1,a
      00003B E2               [24]  149 	movx	a,@r0
      00003C F7               [12]  150 	mov	@r1,a
      00003D 08               [12]  151 	inc	r0
      00003E E2               [24]  152 	movx	a,@r0
      00003F 09               [12]  153 	inc	r1
      000040 F7               [12]  154 	mov	@r1,a
      000041 08               [12]  155 	inc	r0
      000042 E2               [24]  156 	movx	a,@r0
      000043 09               [12]  157 	inc	r1
      000044 F7               [12]  158 	mov	@r1,a
      000045 08               [12]  159 	inc	r0
      000046 E2               [24]  160 	movx	a,@r0
      000047 09               [12]  161 	inc	r1
      000048 F7               [12]  162 	mov	@r1,a
      000049 E5*00            [12]  163 	mov	a,_bp
      00004B 24 05            [12]  164 	add	a,#0x05
      00004D F8               [12]  165 	mov	r0,a
      00004E 86 82            [24]  166 	mov	dpl,@r0
      000050 08               [12]  167 	inc	r0
      000051 86 83            [24]  168 	mov	dph,@r0
      000053 08               [12]  169 	inc	r0
      000054 86 F0            [24]  170 	mov	b,@r0
      000056 08               [12]  171 	inc	r0
      000057 E6               [12]  172 	mov	a,@r0
      000058 12r00r00         [24]  173 	lcall	___fs2slong
      00005B A8*00            [24]  174 	mov	r0,_bp
      00005D 08               [12]  175 	inc	r0
      00005E A6 82            [24]  176 	mov	@r0,dpl
      000060 08               [12]  177 	inc	r0
      000061 A6 83            [24]  178 	mov	@r0,dph
      000063 08               [12]  179 	inc	r0
      000064 A6 F0            [24]  180 	mov	@r0,b
      000066 08               [12]  181 	inc	r0
      000067 F6               [12]  182 	mov	@r0,a
                                    183 ;	ceilf.c:37: if (r<0)
      000068 A8*00            [24]  184 	mov	r0,_bp
      00006A 08               [12]  185 	inc	r0
      00006B 08               [12]  186 	inc	r0
      00006C 08               [12]  187 	inc	r0
      00006D 08               [12]  188 	inc	r0
      00006E E6               [12]  189 	mov	a,@r0
      00006F 30 E7 31         [24]  190 	jnb	acc.7,00102$
                                    191 ;	ceilf.c:38: return r;
      000072 A8*00            [24]  192 	mov	r0,_bp
      000074 08               [12]  193 	inc	r0
      000075 86 82            [24]  194 	mov	dpl,@r0
      000077 08               [12]  195 	inc	r0
      000078 86 83            [24]  196 	mov	dph,@r0
      00007A 08               [12]  197 	inc	r0
      00007B 86 F0            [24]  198 	mov	b,@r0
      00007D 08               [12]  199 	inc	r0
      00007E E6               [12]  200 	mov	a,@r0
      00007F 12r00r00         [24]  201 	lcall	___slong2fs
      000082 C8               [12]  202 	xch	a,r0
      000083 E5*00            [12]  203 	mov	a,_bp
      000085 24 05            [12]  204 	add	a,#0x05
      000087 C8               [12]  205 	xch	a,r0
      000088 A6 82            [24]  206 	mov	@r0,dpl
      00008A 08               [12]  207 	inc	r0
      00008B A6 83            [24]  208 	mov	@r0,dph
      00008D 08               [12]  209 	inc	r0
      00008E A6 F0            [24]  210 	mov	@r0,b
      000090 08               [12]  211 	inc	r0
      000091 F6               [12]  212 	mov	@r0,a
      000092 E5*00            [12]  213 	mov	a,_bp
      000094 24 05            [12]  214 	add	a,#0x05
      000096 F8               [12]  215 	mov	r0,a
      000097 86 82            [24]  216 	mov	dpl,@r0
      000099 08               [12]  217 	inc	r0
      00009A 86 83            [24]  218 	mov	dph,@r0
      00009C 08               [12]  219 	inc	r0
      00009D 86 F0            [24]  220 	mov	b,@r0
      00009F 08               [12]  221 	inc	r0
      0000A0 E6               [12]  222 	mov	a,@r0
      0000A1 80 69            [24]  223 	sjmp	00104$
      0000A3                        224 00102$:
                                    225 ;	ceilf.c:40: return (r+((r<x)?1:0));
      0000A3 A8*00            [24]  226 	mov	r0,_bp
      0000A5 08               [12]  227 	inc	r0
      0000A6 86 82            [24]  228 	mov	dpl,@r0
      0000A8 08               [12]  229 	inc	r0
      0000A9 86 83            [24]  230 	mov	dph,@r0
      0000AB 08               [12]  231 	inc	r0
      0000AC 86 F0            [24]  232 	mov	b,@r0
      0000AE 08               [12]  233 	inc	r0
      0000AF E6               [12]  234 	mov	a,@r0
      0000B0 12r00r00         [24]  235 	lcall	___slong2fs
      0000B3 AA 82            [24]  236 	mov	r2,dpl
      0000B5 AB 83            [24]  237 	mov	r3,dph
      0000B7 AE F0            [24]  238 	mov	r6,b
      0000B9 FF               [12]  239 	mov	r7,a
      0000BA E5*00            [12]  240 	mov	a,_bp
      0000BC 24 05            [12]  241 	add	a,#0x05
      0000BE F8               [12]  242 	mov	r0,a
      0000BF 90r00r00         [24]  243 	mov	dptr,#___fslt_PARM_2
      0000C2 E6               [12]  244 	mov	a,@r0
      0000C3 F0               [24]  245 	movx	@dptr,a
      0000C4 08               [12]  246 	inc	r0
      0000C5 E6               [12]  247 	mov	a,@r0
      0000C6 A3               [24]  248 	inc	dptr
      0000C7 F0               [24]  249 	movx	@dptr,a
      0000C8 08               [12]  250 	inc	r0
      0000C9 E6               [12]  251 	mov	a,@r0
      0000CA A3               [24]  252 	inc	dptr
      0000CB F0               [24]  253 	movx	@dptr,a
      0000CC 08               [12]  254 	inc	r0
      0000CD E6               [12]  255 	mov	a,@r0
      0000CE A3               [24]  256 	inc	dptr
      0000CF F0               [24]  257 	movx	@dptr,a
      0000D0 8A 82            [24]  258 	mov	dpl,r2
      0000D2 8B 83            [24]  259 	mov	dph,r3
      0000D4 8E F0            [24]  260 	mov	b,r6
      0000D6 EF               [12]  261 	mov	a,r7
      0000D7 12r00r00         [24]  262 	lcall	___fslt
      0000DA E5 82            [12]  263 	mov	a,dpl
      0000DC 60 04            [24]  264 	jz	00106$
      0000DE 7F 01            [12]  265 	mov	r7,#0x01
      0000E0 80 02            [24]  266 	sjmp	00107$
      0000E2                        267 00106$:
      0000E2 7F 00            [12]  268 	mov	r7,#0x00
      0000E4                        269 00107$:
      0000E4 E4               [12]  270 	clr	a
      0000E5 FE               [12]  271 	mov	r6,a
      0000E6 33               [12]  272 	rlc	a
      0000E7 95 E0            [12]  273 	subb	a,acc
      0000E9 FD               [12]  274 	mov	r5,a
      0000EA FC               [12]  275 	mov	r4,a
      0000EB A8*00            [24]  276 	mov	r0,_bp
      0000ED 08               [12]  277 	inc	r0
      0000EE EF               [12]  278 	mov	a,r7
      0000EF 26               [12]  279 	add	a,@r0
      0000F0 FF               [12]  280 	mov	r7,a
      0000F1 EE               [12]  281 	mov	a,r6
      0000F2 08               [12]  282 	inc	r0
      0000F3 36               [12]  283 	addc	a,@r0
      0000F4 FE               [12]  284 	mov	r6,a
      0000F5 ED               [12]  285 	mov	a,r5
      0000F6 08               [12]  286 	inc	r0
      0000F7 36               [12]  287 	addc	a,@r0
      0000F8 FD               [12]  288 	mov	r5,a
      0000F9 EC               [12]  289 	mov	a,r4
      0000FA 08               [12]  290 	inc	r0
      0000FB 36               [12]  291 	addc	a,@r0
      0000FC 8F 82            [24]  292 	mov	dpl,r7
      0000FE 8E 83            [24]  293 	mov	dph,r6
      000100 8D F0            [24]  294 	mov	b,r5
      000102 12r00r00         [24]  295 	lcall	___slong2fs
      000105 AC 82            [24]  296 	mov	r4,dpl
      000107 AD 83            [24]  297 	mov	r5,dph
      000109 AE F0            [24]  298 	mov	r6,b
      00010B FF               [12]  299 	mov	r7,a
      00010C                        300 00104$:
      00010C 85*00 81         [24]  301 	mov	sp,_bp
      00010F D0*00            [24]  302 	pop	_bp
      000111 C5*00            [12]  303 	xch	a,_bpx
      000113 F8               [12]  304 	mov	r0,a
      000114 18               [12]  305 	dec	r0
      000115 E2               [24]  306 	movx	a,@r0
      000116 C5*00            [12]  307 	xch	a,_bpx
      000118 88*00            [24]  308 	mov	_spx,r0
      00011A 22               [24]  309 	ret
                                    310 	.area CSEG    (CODE)
                                    311 	.area CONST   (CODE)
                                    312 	.area XINIT   (CODE)
                                    313 	.area CABS    (ABS,CODE)
