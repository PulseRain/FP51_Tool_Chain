                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module serial
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _serial_getc
                                     12 	.globl _serial_putc
                                     13 	.globl _serial_interrupt_handler
                                     14 	.globl _serial_init
                                     15 	.globl _TF2
                                     16 	.globl _EXF2
                                     17 	.globl _RCLK
                                     18 	.globl _TCLK
                                     19 	.globl _EXEN2
                                     20 	.globl _TR2
                                     21 	.globl _C_T2
                                     22 	.globl _CP_RL2
                                     23 	.globl _T2CON_7
                                     24 	.globl _T2CON_6
                                     25 	.globl _T2CON_5
                                     26 	.globl _T2CON_4
                                     27 	.globl _T2CON_3
                                     28 	.globl _T2CON_2
                                     29 	.globl _T2CON_1
                                     30 	.globl _T2CON_0
                                     31 	.globl _PT2
                                     32 	.globl _ET2
                                     33 	.globl _CY
                                     34 	.globl _AC
                                     35 	.globl _F0
                                     36 	.globl _RS1
                                     37 	.globl _RS0
                                     38 	.globl _OV
                                     39 	.globl _F1
                                     40 	.globl _P
                                     41 	.globl _PS
                                     42 	.globl _PT1
                                     43 	.globl _PX1
                                     44 	.globl _PT0
                                     45 	.globl _PX0
                                     46 	.globl _RD
                                     47 	.globl _WR
                                     48 	.globl _T1
                                     49 	.globl _T0
                                     50 	.globl _INT1
                                     51 	.globl _INT0
                                     52 	.globl _TXD
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _EA
                                     63 	.globl _ES
                                     64 	.globl _ET1
                                     65 	.globl _EX1
                                     66 	.globl _ET0
                                     67 	.globl _EX0
                                     68 	.globl _P2_7
                                     69 	.globl _P2_6
                                     70 	.globl _P2_5
                                     71 	.globl _P2_4
                                     72 	.globl _P2_3
                                     73 	.globl _P2_2
                                     74 	.globl _P2_1
                                     75 	.globl _P2_0
                                     76 	.globl _SM0
                                     77 	.globl _SM1
                                     78 	.globl _SM2
                                     79 	.globl _REN
                                     80 	.globl _TB8
                                     81 	.globl _RB8
                                     82 	.globl _TI
                                     83 	.globl _RI
                                     84 	.globl _P1_7
                                     85 	.globl _P1_6
                                     86 	.globl _P1_5
                                     87 	.globl _P1_4
                                     88 	.globl _P1_3
                                     89 	.globl _P1_2
                                     90 	.globl _P1_1
                                     91 	.globl _P1_0
                                     92 	.globl _TF1
                                     93 	.globl _TR1
                                     94 	.globl _TF0
                                     95 	.globl _TR0
                                     96 	.globl _IE1
                                     97 	.globl _IT1
                                     98 	.globl _IE0
                                     99 	.globl _IT0
                                    100 	.globl _P0_7
                                    101 	.globl _P0_6
                                    102 	.globl _P0_5
                                    103 	.globl _P0_4
                                    104 	.globl _P0_3
                                    105 	.globl _P0_2
                                    106 	.globl _P0_1
                                    107 	.globl _P0_0
                                    108 	.globl _TH2
                                    109 	.globl _TL2
                                    110 	.globl _RCAP2H
                                    111 	.globl _RCAP2L
                                    112 	.globl _T2CON
                                    113 	.globl __XPAGE
                                    114 	.globl _B
                                    115 	.globl _ACC
                                    116 	.globl _PSW
                                    117 	.globl _IP
                                    118 	.globl _P3
                                    119 	.globl _IE
                                    120 	.globl _P2
                                    121 	.globl _SBUF
                                    122 	.globl _SCON
                                    123 	.globl _P1
                                    124 	.globl _TH1
                                    125 	.globl _TH0
                                    126 	.globl _TL1
                                    127 	.globl _TL0
                                    128 	.globl _TMOD
                                    129 	.globl _TCON
                                    130 	.globl _PCON
                                    131 	.globl _DPH
                                    132 	.globl _DPL
                                    133 	.globl _SP
                                    134 	.globl _P0
                                    135 ;--------------------------------------------------------
                                    136 ; special function registers
                                    137 ;--------------------------------------------------------
                                    138 	.area RSEG    (ABS,DATA)
      000000                        139 	.org 0x0000
                           000080   140 _P0	=	0x0080
                           000081   141 _SP	=	0x0081
                           000082   142 _DPL	=	0x0082
                           000083   143 _DPH	=	0x0083
                           000087   144 _PCON	=	0x0087
                           000088   145 _TCON	=	0x0088
                           000089   146 _TMOD	=	0x0089
                           00008A   147 _TL0	=	0x008a
                           00008B   148 _TL1	=	0x008b
                           00008C   149 _TH0	=	0x008c
                           00008D   150 _TH1	=	0x008d
                           000090   151 _P1	=	0x0090
                           000098   152 _SCON	=	0x0098
                           000099   153 _SBUF	=	0x0099
                           0000A0   154 _P2	=	0x00a0
                           0000A8   155 _IE	=	0x00a8
                           0000B0   156 _P3	=	0x00b0
                           0000B8   157 _IP	=	0x00b8
                           0000D0   158 _PSW	=	0x00d0
                           0000E0   159 _ACC	=	0x00e0
                           0000F0   160 _B	=	0x00f0
                           0000E7   161 __XPAGE	=	0x00e7
                           0000C8   162 _T2CON	=	0x00c8
                           0000CA   163 _RCAP2L	=	0x00ca
                           0000CB   164 _RCAP2H	=	0x00cb
                           0000CC   165 _TL2	=	0x00cc
                           0000CD   166 _TH2	=	0x00cd
                                    167 ;--------------------------------------------------------
                                    168 ; special function bits
                                    169 ;--------------------------------------------------------
                                    170 	.area RSEG    (ABS,DATA)
      000000                        171 	.org 0x0000
                           000080   172 _P0_0	=	0x0080
                           000081   173 _P0_1	=	0x0081
                           000082   174 _P0_2	=	0x0082
                           000083   175 _P0_3	=	0x0083
                           000084   176 _P0_4	=	0x0084
                           000085   177 _P0_5	=	0x0085
                           000086   178 _P0_6	=	0x0086
                           000087   179 _P0_7	=	0x0087
                           000088   180 _IT0	=	0x0088
                           000089   181 _IE0	=	0x0089
                           00008A   182 _IT1	=	0x008a
                           00008B   183 _IE1	=	0x008b
                           00008C   184 _TR0	=	0x008c
                           00008D   185 _TF0	=	0x008d
                           00008E   186 _TR1	=	0x008e
                           00008F   187 _TF1	=	0x008f
                           000090   188 _P1_0	=	0x0090
                           000091   189 _P1_1	=	0x0091
                           000092   190 _P1_2	=	0x0092
                           000093   191 _P1_3	=	0x0093
                           000094   192 _P1_4	=	0x0094
                           000095   193 _P1_5	=	0x0095
                           000096   194 _P1_6	=	0x0096
                           000097   195 _P1_7	=	0x0097
                           000098   196 _RI	=	0x0098
                           000099   197 _TI	=	0x0099
                           00009A   198 _RB8	=	0x009a
                           00009B   199 _TB8	=	0x009b
                           00009C   200 _REN	=	0x009c
                           00009D   201 _SM2	=	0x009d
                           00009E   202 _SM1	=	0x009e
                           00009F   203 _SM0	=	0x009f
                           0000A0   204 _P2_0	=	0x00a0
                           0000A1   205 _P2_1	=	0x00a1
                           0000A2   206 _P2_2	=	0x00a2
                           0000A3   207 _P2_3	=	0x00a3
                           0000A4   208 _P2_4	=	0x00a4
                           0000A5   209 _P2_5	=	0x00a5
                           0000A6   210 _P2_6	=	0x00a6
                           0000A7   211 _P2_7	=	0x00a7
                           0000A8   212 _EX0	=	0x00a8
                           0000A9   213 _ET0	=	0x00a9
                           0000AA   214 _EX1	=	0x00aa
                           0000AB   215 _ET1	=	0x00ab
                           0000AC   216 _ES	=	0x00ac
                           0000AF   217 _EA	=	0x00af
                           0000B0   218 _P3_0	=	0x00b0
                           0000B1   219 _P3_1	=	0x00b1
                           0000B2   220 _P3_2	=	0x00b2
                           0000B3   221 _P3_3	=	0x00b3
                           0000B4   222 _P3_4	=	0x00b4
                           0000B5   223 _P3_5	=	0x00b5
                           0000B6   224 _P3_6	=	0x00b6
                           0000B7   225 _P3_7	=	0x00b7
                           0000B0   226 _RXD	=	0x00b0
                           0000B1   227 _TXD	=	0x00b1
                           0000B2   228 _INT0	=	0x00b2
                           0000B3   229 _INT1	=	0x00b3
                           0000B4   230 _T0	=	0x00b4
                           0000B5   231 _T1	=	0x00b5
                           0000B6   232 _WR	=	0x00b6
                           0000B7   233 _RD	=	0x00b7
                           0000B8   234 _PX0	=	0x00b8
                           0000B9   235 _PT0	=	0x00b9
                           0000BA   236 _PX1	=	0x00ba
                           0000BB   237 _PT1	=	0x00bb
                           0000BC   238 _PS	=	0x00bc
                           0000D0   239 _P	=	0x00d0
                           0000D1   240 _F1	=	0x00d1
                           0000D2   241 _OV	=	0x00d2
                           0000D3   242 _RS0	=	0x00d3
                           0000D4   243 _RS1	=	0x00d4
                           0000D5   244 _F0	=	0x00d5
                           0000D6   245 _AC	=	0x00d6
                           0000D7   246 _CY	=	0x00d7
                           0000AD   247 _ET2	=	0x00ad
                           0000BD   248 _PT2	=	0x00bd
                           0000C8   249 _T2CON_0	=	0x00c8
                           0000C9   250 _T2CON_1	=	0x00c9
                           0000CA   251 _T2CON_2	=	0x00ca
                           0000CB   252 _T2CON_3	=	0x00cb
                           0000CC   253 _T2CON_4	=	0x00cc
                           0000CD   254 _T2CON_5	=	0x00cd
                           0000CE   255 _T2CON_6	=	0x00ce
                           0000CF   256 _T2CON_7	=	0x00cf
                           0000C8   257 _CP_RL2	=	0x00c8
                           0000C9   258 _C_T2	=	0x00c9
                           0000CA   259 _TR2	=	0x00ca
                           0000CB   260 _EXEN2	=	0x00cb
                           0000CC   261 _TCLK	=	0x00cc
                           0000CD   262 _RCLK	=	0x00cd
                           0000CE   263 _EXF2	=	0x00ce
                           0000CF   264 _TF2	=	0x00cf
                                    265 ;--------------------------------------------------------
                                    266 ; overlayable register banks
                                    267 ;--------------------------------------------------------
                                    268 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        269 	.ds 8
                                    270 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        271 	.ds 8
                                    272 ;--------------------------------------------------------
                                    273 ; internal ram data
                                    274 ;--------------------------------------------------------
                                    275 	.area DSEG    (DATA)
                                    276 ;--------------------------------------------------------
                                    277 ; overlayable items in internal ram 
                                    278 ;--------------------------------------------------------
                                    279 ;--------------------------------------------------------
                                    280 ; indirectly addressable internal ram data
                                    281 ;--------------------------------------------------------
                                    282 	.area ISEG    (DATA)
                                    283 ;--------------------------------------------------------
                                    284 ; absolute internal ram data
                                    285 ;--------------------------------------------------------
                                    286 	.area IABS    (ABS,DATA)
                                    287 	.area IABS    (ABS,DATA)
                                    288 ;--------------------------------------------------------
                                    289 ; bit data
                                    290 ;--------------------------------------------------------
                                    291 	.area BSEG    (BIT)
      000000                        292 _work_flag_byte_arrived:
      000000                        293 	.ds 1
      000001                        294 _work_flag_buffer_transfered:
      000001                        295 	.ds 1
      000002                        296 _tx_serial_buffer_empty:
      000002                        297 	.ds 1
      000003                        298 _rx_serial_buffer_empty:
      000003                        299 	.ds 1
                                    300 ;--------------------------------------------------------
                                    301 ; paged external ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area PSEG    (PAG,XDATA)
                                    304 ;--------------------------------------------------------
                                    305 ; external ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area XSEG    (XDATA)
      000000                        308 _stx_index_in:
      000000                        309 	.ds 1
      000001                        310 _srx_index_in:
      000001                        311 	.ds 1
      000002                        312 _stx_index_out:
      000002                        313 	.ds 1
      000003                        314 _srx_index_out:
      000003                        315 	.ds 1
      000004                        316 _stx_buffer:
      000004                        317 	.ds 256
      000104                        318 _srx_buffer:
      000104                        319 	.ds 256
      000204                        320 _serial_putc_c_1_8:
      000204                        321 	.ds 1
                                    322 ;--------------------------------------------------------
                                    323 ; absolute external ram data
                                    324 ;--------------------------------------------------------
                                    325 	.area XABS    (ABS,XDATA)
                                    326 ;--------------------------------------------------------
                                    327 ; external initialized ram data
                                    328 ;--------------------------------------------------------
                                    329 	.area XISEG   (XDATA)
                                    330 	.area HOME    (CODE)
                                    331 	.area GSINIT0 (CODE)
                                    332 	.area GSINIT1 (CODE)
                                    333 	.area GSINIT2 (CODE)
                                    334 	.area GSINIT3 (CODE)
                                    335 	.area GSINIT4 (CODE)
                                    336 	.area GSINIT5 (CODE)
                                    337 	.area GSINIT  (CODE)
                                    338 	.area GSFINAL (CODE)
                                    339 	.area CSEG    (CODE)
                                    340 ;--------------------------------------------------------
                                    341 ; global & static initialisations
                                    342 ;--------------------------------------------------------
                                    343 	.area HOME    (CODE)
                                    344 	.area GSINIT  (CODE)
                                    345 	.area GSFINAL (CODE)
                                    346 	.area GSINIT  (CODE)
                                    347 ;--------------------------------------------------------
                                    348 ; Home
                                    349 ;--------------------------------------------------------
                                    350 	.area HOME    (CODE)
                                    351 	.area HOME    (CODE)
                                    352 ;--------------------------------------------------------
                                    353 ; code
                                    354 ;--------------------------------------------------------
                                    355 	.area CSEG    (CODE)
                                    356 ;------------------------------------------------------------
                                    357 ;Allocation info for local variables in function 'serial_init'
                                    358 ;------------------------------------------------------------
                                    359 ;	serial.c:45: void serial_init(void)
                                    360 ;	-----------------------------------------
                                    361 ;	 function serial_init
                                    362 ;	-----------------------------------------
      000000                        363 _serial_init:
                           000007   364 	ar7 = 0x07
                           000006   365 	ar6 = 0x06
                           000005   366 	ar5 = 0x05
                           000004   367 	ar4 = 0x04
                           000003   368 	ar3 = 0x03
                           000002   369 	ar2 = 0x02
                           000001   370 	ar1 = 0x01
                           000000   371 	ar0 = 0x00
                                    372 ;	serial.c:47: SCON = 0x50;
      000000 75 98 50         [24]  373 	mov	_SCON,#0x50
                                    374 ;	serial.c:48: T2CON = 0x34;
      000003 75 C8 34         [24]  375 	mov	_T2CON,#0x34
                                    376 ;	serial.c:49: PS = 1;
      000006 D2 BC            [12]  377 	setb	_PS
                                    378 ;	serial.c:50: T2CON = 0x34;
      000008 75 C8 34         [24]  379 	mov	_T2CON,#0x34
                                    380 ;	serial.c:51: RCAP2H = 0xFF;
      00000B 75 CB FF         [24]  381 	mov	_RCAP2H,#0xff
                                    382 ;	serial.c:52: RCAP2L = 0xDA;
      00000E 75 CA DA         [24]  383 	mov	_RCAP2L,#0xda
                                    384 ;	serial.c:54: RI = 0;
      000011 C2 98            [12]  385 	clr	_RI
                                    386 ;	serial.c:55: TI = 0;
      000013 C2 99            [12]  387 	clr	_TI
                                    388 ;	serial.c:57: stx_index_in = srx_index_in = stx_index_out = srx_index_out = 0;
      000015 90r00r03         [24]  389 	mov	dptr,#_srx_index_out
      000018 E4               [12]  390 	clr	a
      000019 F0               [24]  391 	movx	@dptr,a
      00001A 90r00r02         [24]  392 	mov	dptr,#_stx_index_out
      00001D F0               [24]  393 	movx	@dptr,a
      00001E 90r00r01         [24]  394 	mov	dptr,#_srx_index_in
      000021 F0               [24]  395 	movx	@dptr,a
      000022 90r00r00         [24]  396 	mov	dptr,#_stx_index_in
      000025 F0               [24]  397 	movx	@dptr,a
                                    398 ;	serial.c:58: rx_serial_buffer_empty = tx_serial_buffer_empty = 1;
      000026 D2*02            [12]  399 	setb	_tx_serial_buffer_empty
      000028 D2*03            [12]  400 	setb	_rx_serial_buffer_empty
                                    401 ;	serial.c:59: work_flag_buffer_transfered = 0;
      00002A C2*01            [12]  402 	clr	_work_flag_buffer_transfered
                                    403 ;	serial.c:60: work_flag_byte_arrived = 0;
      00002C C2*00            [12]  404 	clr	_work_flag_byte_arrived
                                    405 ;	serial.c:61: ES=1;
      00002E D2 AC            [12]  406 	setb	_ES
      000030 22               [24]  407 	ret
                                    408 ;------------------------------------------------------------
                                    409 ;Allocation info for local variables in function 'serial_interrupt_handler'
                                    410 ;------------------------------------------------------------
                                    411 ;	serial.c:64: void serial_interrupt_handler(void) __interrupt 4 __using 1
                                    412 ;	-----------------------------------------
                                    413 ;	 function serial_interrupt_handler
                                    414 ;	-----------------------------------------
      000031                        415 _serial_interrupt_handler:
                           00000F   416 	ar7 = 0x0f
                           00000E   417 	ar6 = 0x0e
                           00000D   418 	ar5 = 0x0d
                           00000C   419 	ar4 = 0x0c
                           00000B   420 	ar3 = 0x0b
                           00000A   421 	ar2 = 0x0a
                           000009   422 	ar1 = 0x09
                           000008   423 	ar0 = 0x08
      000031 C0 E0            [24]  424 	push	acc
      000033 C0 82            [24]  425 	push	dpl
      000035 C0 83            [24]  426 	push	dph
      000037 C0 D0            [24]  427 	push	psw
      000039 75 D0 08         [24]  428 	mov	psw,#0x08
                                    429 ;	serial.c:66: ES=0;
      00003C C2 AC            [12]  430 	clr	_ES
                                    431 ;	serial.c:67: if ( RI )
                                    432 ;	serial.c:69: RI = 0;
      00003E 10 98 02         [24]  433 	jbc	_RI,00119$
      000041 80 18            [24]  434 	sjmp	00102$
      000043                        435 00119$:
                                    436 ;	serial.c:70: srx_buffer[srx_index_in++]=SBUF;
      000043 90r00r01         [24]  437 	mov	dptr,#_srx_index_in
      000046 E0               [24]  438 	movx	a,@dptr
      000047 FF               [12]  439 	mov	r7,a
      000048 04               [12]  440 	inc	a
      000049 F0               [24]  441 	movx	@dptr,a
      00004A EF               [12]  442 	mov	a,r7
      00004B 24r04            [12]  443 	add	a,#_srx_buffer
      00004D F5 82            [12]  444 	mov	dpl,a
      00004F E4               [12]  445 	clr	a
      000050 34s01            [12]  446 	addc	a,#(_srx_buffer >> 8)
      000052 F5 83            [12]  447 	mov	dph,a
      000054 E5 99            [12]  448 	mov	a,_SBUF
      000056 F0               [24]  449 	movx	@dptr,a
                                    450 ;	serial.c:71: work_flag_byte_arrived = 1;
      000057 D2*00            [12]  451 	setb	_work_flag_byte_arrived
                                    452 ;	serial.c:72: rx_serial_buffer_empty = 0;
      000059 C2*03            [12]  453 	clr	_rx_serial_buffer_empty
      00005B                        454 00102$:
                                    455 ;	serial.c:74: if ( TI )
                                    456 ;	serial.c:76: TI = 0;
      00005B 10 99 02         [24]  457 	jbc	_TI,00120$
      00005E 80 27            [24]  458 	sjmp	00107$
      000060                        459 00120$:
                                    460 ;	serial.c:77: if (stx_index_out == stx_index_in )
      000060 90r00r02         [24]  461 	mov	dptr,#_stx_index_out
      000063 E0               [24]  462 	movx	a,@dptr
      000064 FF               [12]  463 	mov	r7,a
      000065 90r00r00         [24]  464 	mov	dptr,#_stx_index_in
      000068 E0               [24]  465 	movx	a,@dptr
      000069 FE               [12]  466 	mov	r6,a
      00006A EF               [12]  467 	mov	a,r7
      00006B B5 0E 06         [24]  468 	cjne	a,ar6,00104$
                                    469 ;	serial.c:79: tx_serial_buffer_empty = 1;
      00006E D2*02            [12]  470 	setb	_tx_serial_buffer_empty
                                    471 ;	serial.c:80: work_flag_buffer_transfered = 1;
      000070 D2*01            [12]  472 	setb	_work_flag_buffer_transfered
      000072 80 13            [24]  473 	sjmp	00107$
      000074                        474 00104$:
                                    475 ;	serial.c:82: else SBUF = stx_buffer[stx_index_out++];
      000074 90r00r02         [24]  476 	mov	dptr,#_stx_index_out
      000077 EF               [12]  477 	mov	a,r7
      000078 04               [12]  478 	inc	a
      000079 F0               [24]  479 	movx	@dptr,a
      00007A EF               [12]  480 	mov	a,r7
      00007B 24r04            [12]  481 	add	a,#_stx_buffer
      00007D F5 82            [12]  482 	mov	dpl,a
      00007F E4               [12]  483 	clr	a
      000080 34s00            [12]  484 	addc	a,#(_stx_buffer >> 8)
      000082 F5 83            [12]  485 	mov	dph,a
      000084 E0               [24]  486 	movx	a,@dptr
      000085 F5 99            [12]  487 	mov	_SBUF,a
      000087                        488 00107$:
                                    489 ;	serial.c:84: ES=1;
      000087 D2 AC            [12]  490 	setb	_ES
      000089 D0 D0            [24]  491 	pop	psw
      00008B D0 83            [24]  492 	pop	dph
      00008D D0 82            [24]  493 	pop	dpl
      00008F D0 E0            [24]  494 	pop	acc
      000091 32               [24]  495 	reti
                                    496 ;	eliminated unneeded push/pop b
                                    497 ;------------------------------------------------------------
                                    498 ;Allocation info for local variables in function 'serial_putc'
                                    499 ;------------------------------------------------------------
                                    500 ;c                         Allocated with name '_serial_putc_c_1_8'
                                    501 ;------------------------------------------------------------
                                    502 ;	serial.c:89: void serial_putc(unsigned char c)
                                    503 ;	-----------------------------------------
                                    504 ;	 function serial_putc
                                    505 ;	-----------------------------------------
      000092                        506 _serial_putc:
                           000007   507 	ar7 = 0x07
                           000006   508 	ar6 = 0x06
                           000005   509 	ar5 = 0x05
                           000004   510 	ar4 = 0x04
                           000003   511 	ar3 = 0x03
                           000002   512 	ar2 = 0x02
                           000001   513 	ar1 = 0x01
                           000000   514 	ar0 = 0x00
      000092 E5 82            [12]  515 	mov	a,dpl
      000094 90r02r04         [24]  516 	mov	dptr,#_serial_putc_c_1_8
      000097 F0               [24]  517 	movx	@dptr,a
                                    518 ;	serial.c:91: stx_buffer[stx_index_in++]=c;
      000098 90r00r00         [24]  519 	mov	dptr,#_stx_index_in
      00009B E0               [24]  520 	movx	a,@dptr
      00009C FF               [12]  521 	mov	r7,a
      00009D 04               [12]  522 	inc	a
      00009E F0               [24]  523 	movx	@dptr,a
      00009F EF               [12]  524 	mov	a,r7
      0000A0 24r04            [12]  525 	add	a,#_stx_buffer
      0000A2 FF               [12]  526 	mov	r7,a
      0000A3 E4               [12]  527 	clr	a
      0000A4 34s00            [12]  528 	addc	a,#(_stx_buffer >> 8)
      0000A6 FE               [12]  529 	mov	r6,a
      0000A7 90r02r04         [24]  530 	mov	dptr,#_serial_putc_c_1_8
      0000AA E0               [24]  531 	movx	a,@dptr
      0000AB FD               [12]  532 	mov	r5,a
      0000AC 8F 82            [24]  533 	mov	dpl,r7
      0000AE 8E 83            [24]  534 	mov	dph,r6
      0000B0 F0               [24]  535 	movx	@dptr,a
                                    536 ;	serial.c:92: ES=0;
      0000B1 C2 AC            [12]  537 	clr	_ES
                                    538 ;	serial.c:93: if ( tx_serial_buffer_empty )
                                    539 ;	serial.c:95: tx_serial_buffer_empty = 0;
      0000B3 10*02 02         [24]  540 	jbc	_tx_serial_buffer_empty,00108$
      0000B6 80 02            [24]  541 	sjmp	00102$
      0000B8                        542 00108$:
                                    543 ;	serial.c:96: TI=1;
      0000B8 D2 99            [12]  544 	setb	_TI
      0000BA                        545 00102$:
                                    546 ;	serial.c:98: ES=1;
      0000BA D2 AC            [12]  547 	setb	_ES
      0000BC 22               [24]  548 	ret
                                    549 ;------------------------------------------------------------
                                    550 ;Allocation info for local variables in function 'serial_getc'
                                    551 ;------------------------------------------------------------
                                    552 ;tmp                       Allocated with name '_serial_getc_tmp_1_12'
                                    553 ;------------------------------------------------------------
                                    554 ;	serial.c:101: unsigned char serial_getc(void)
                                    555 ;	-----------------------------------------
                                    556 ;	 function serial_getc
                                    557 ;	-----------------------------------------
      0000BD                        558 _serial_getc:
                                    559 ;	serial.c:103: unsigned char tmp = srx_buffer[srx_index_out++];
      0000BD 90r00r03         [24]  560 	mov	dptr,#_srx_index_out
      0000C0 E0               [24]  561 	movx	a,@dptr
      0000C1 FF               [12]  562 	mov	r7,a
      0000C2 04               [12]  563 	inc	a
      0000C3 F0               [24]  564 	movx	@dptr,a
      0000C4 EF               [12]  565 	mov	a,r7
      0000C5 24r04            [12]  566 	add	a,#_srx_buffer
      0000C7 F5 82            [12]  567 	mov	dpl,a
      0000C9 E4               [12]  568 	clr	a
      0000CA 34s01            [12]  569 	addc	a,#(_srx_buffer >> 8)
      0000CC F5 83            [12]  570 	mov	dph,a
      0000CE E0               [24]  571 	movx	a,@dptr
      0000CF FF               [12]  572 	mov	r7,a
                                    573 ;	serial.c:104: ES=0;
      0000D0 C2 AC            [12]  574 	clr	_ES
                                    575 ;	serial.c:105: if ( srx_index_out == srx_index_in) rx_serial_buffer_empty = 1;
      0000D2 90r00r03         [24]  576 	mov	dptr,#_srx_index_out
      0000D5 E0               [24]  577 	movx	a,@dptr
      0000D6 FE               [12]  578 	mov	r6,a
      0000D7 90r00r01         [24]  579 	mov	dptr,#_srx_index_in
      0000DA E0               [24]  580 	movx	a,@dptr
      0000DB FD               [12]  581 	mov	r5,a
      0000DC EE               [12]  582 	mov	a,r6
      0000DD B5 05 02         [24]  583 	cjne	a,ar5,00102$
      0000E0 D2*03            [12]  584 	setb	_rx_serial_buffer_empty
      0000E2                        585 00102$:
                                    586 ;	serial.c:106: ES=1;
      0000E2 D2 AC            [12]  587 	setb	_ES
                                    588 ;	serial.c:107: return tmp;
      0000E4 8F 82            [24]  589 	mov	dpl,r7
      0000E6 22               [24]  590 	ret
                                    591 	.area CSEG    (CODE)
                                    592 	.area CONST   (CODE)
                                    593 	.area XINIT   (CODE)
                                    594 	.area CABS    (ABS,CODE)
