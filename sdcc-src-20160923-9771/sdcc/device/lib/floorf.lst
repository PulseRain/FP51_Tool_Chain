                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.3 #9771 (MSVC)
                                      4 ;--------------------------------------------------------
                                      5 	.module floorf
                                      6 	.optsdcc -mmcs51 --model-large --xstack
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _floorf
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'floorf'
                                     91 ;------------------------------------------------------------
                                     92 ;x                         Allocated to stack - _bpx +0
                                     93 ;r                         Allocated to stack - _bpx +4
                                     94 ;sloc0                     Allocated to stack - _bp +1
                                     95 ;sloc1                     Allocated to stack - _bp +5
                                     96 ;------------------------------------------------------------
                                     97 ;	floorf.c:33: float floorf (float x) _FLOAT_FUNC_REENTRANT
                                     98 ;	-----------------------------------------
                                     99 ;	 function floorf
                                    100 ;	-----------------------------------------
      000000                        101 _floorf:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      000000 A8*00            [24]  110 	mov	r0,_spx
      000002 05*00            [12]  111 	inc	_spx
      000004 C5*00            [12]  112 	xch	a,_bpx
      000006 F2               [24]  113 	movx	@r0,a
      000007 08               [12]  114 	inc	r0
      000008 E8               [12]  115 	mov	a,r0
      000009 C5*00            [12]  116 	xch	a,_bpx
      00000B C0*00            [24]  117 	push	_bp
      00000D 85 81*00         [24]  118 	mov	_bp,sp
      000010 C8               [12]  119 	xch	a,r0
      000011 E5 81            [12]  120 	mov	a,sp
      000013 24 08            [12]  121 	add	a,#0x08
      000015 F5 81            [12]  122 	mov	sp,a
      000017 C8               [12]  123 	xch	a,r0
      000018 05*00            [12]  124 	inc	_spx
      00001A 05*00            [12]  125 	inc	_spx
      00001C 05*00            [12]  126 	inc	_spx
      00001E 05*00            [12]  127 	inc	_spx
      000020 AF 82            [24]  128 	mov	r7,dpl
      000022 AE 83            [24]  129 	mov	r6,dph
      000024 AD F0            [24]  130 	mov	r5,b
      000026 FC               [12]  131 	mov	r4,a
      000027 A8*00            [24]  132 	mov	r0,_bpx
      000029 EF               [12]  133 	mov	a,r7
      00002A F2               [24]  134 	movx	@r0,a
      00002B 08               [12]  135 	inc	r0
      00002C EE               [12]  136 	mov	a,r6
      00002D F2               [24]  137 	movx	@r0,a
      00002E 08               [12]  138 	inc	r0
      00002F ED               [12]  139 	mov	a,r5
      000030 F2               [24]  140 	movx	@r0,a
      000031 08               [12]  141 	inc	r0
      000032 EC               [12]  142 	mov	a,r4
      000033 F2               [24]  143 	movx	@r0,a
                                    144 ;	floorf.c:36: r=x;
      000034 A8*00            [24]  145 	mov	r0,_bpx
      000036 E5*00            [12]  146 	mov	a,_bp
      000038 24 05            [12]  147 	add	a,#0x05
      00003A F9               [12]  148 	mov	r1,a
      00003B E2               [24]  149 	movx	a,@r0
      00003C F7               [12]  150 	mov	@r1,a
      00003D 08               [12]  151 	inc	r0
      00003E E2               [24]  152 	movx	a,@r0
      00003F 09               [12]  153 	inc	r1
      000040 F7               [12]  154 	mov	@r1,a
      000041 08               [12]  155 	inc	r0
      000042 E2               [24]  156 	movx	a,@r0
      000043 09               [12]  157 	inc	r1
      000044 F7               [12]  158 	mov	@r1,a
      000045 08               [12]  159 	inc	r0
      000046 E2               [24]  160 	movx	a,@r0
      000047 09               [12]  161 	inc	r1
      000048 F7               [12]  162 	mov	@r1,a
      000049 E5*00            [12]  163 	mov	a,_bp
      00004B 24 05            [12]  164 	add	a,#0x05
      00004D F8               [12]  165 	mov	r0,a
      00004E 86 82            [24]  166 	mov	dpl,@r0
      000050 08               [12]  167 	inc	r0
      000051 86 83            [24]  168 	mov	dph,@r0
      000053 08               [12]  169 	inc	r0
      000054 86 F0            [24]  170 	mov	b,@r0
      000056 08               [12]  171 	inc	r0
      000057 E6               [12]  172 	mov	a,@r0
      000058 12r00r00         [24]  173 	lcall	___fs2slong
      00005B A8*00            [24]  174 	mov	r0,_bp
      00005D 08               [12]  175 	inc	r0
      00005E A6 82            [24]  176 	mov	@r0,dpl
      000060 08               [12]  177 	inc	r0
      000061 A6 83            [24]  178 	mov	@r0,dph
      000063 08               [12]  179 	inc	r0
      000064 A6 F0            [24]  180 	mov	@r0,b
      000066 08               [12]  181 	inc	r0
      000067 F6               [12]  182 	mov	@r0,a
                                    183 ;	floorf.c:37: if (r<=0)
      000068 A8*00            [24]  184 	mov	r0,_bp
      00006A 08               [12]  185 	inc	r0
      00006B C3               [12]  186 	clr	c
      00006C E4               [12]  187 	clr	a
      00006D 96               [12]  188 	subb	a,@r0
      00006E E4               [12]  189 	clr	a
      00006F 08               [12]  190 	inc	r0
      000070 96               [12]  191 	subb	a,@r0
      000071 E4               [12]  192 	clr	a
      000072 08               [12]  193 	inc	r0
      000073 96               [12]  194 	subb	a,@r0
      000074 74 80            [12]  195 	mov	a,#(0x00 ^ 0x80)
      000076 08               [12]  196 	inc	r0
      000077 86 F0            [24]  197 	mov	b,@r0
      000079 63 F0 80         [24]  198 	xrl	b,#0x80
      00007C 95 F0            [12]  199 	subb	a,b
      00007E 40 6B            [24]  200 	jc	00102$
                                    201 ;	floorf.c:38: return (r+((r>x)?-1:0));
      000080 A8*00            [24]  202 	mov	r0,_bp
      000082 08               [12]  203 	inc	r0
      000083 86 82            [24]  204 	mov	dpl,@r0
      000085 08               [12]  205 	inc	r0
      000086 86 83            [24]  206 	mov	dph,@r0
      000088 08               [12]  207 	inc	r0
      000089 86 F0            [24]  208 	mov	b,@r0
      00008B 08               [12]  209 	inc	r0
      00008C E6               [12]  210 	mov	a,@r0
      00008D 12r00r00         [24]  211 	lcall	___slong2fs
      000090 AA 82            [24]  212 	mov	r2,dpl
      000092 AB 83            [24]  213 	mov	r3,dph
      000094 AE F0            [24]  214 	mov	r6,b
      000096 FF               [12]  215 	mov	r7,a
      000097 E5*00            [12]  216 	mov	a,_bp
      000099 24 05            [12]  217 	add	a,#0x05
      00009B F8               [12]  218 	mov	r0,a
      00009C 90r00r00         [24]  219 	mov	dptr,#___fsgt_PARM_2
      00009F E6               [12]  220 	mov	a,@r0
      0000A0 F0               [24]  221 	movx	@dptr,a
      0000A1 08               [12]  222 	inc	r0
      0000A2 E6               [12]  223 	mov	a,@r0
      0000A3 A3               [24]  224 	inc	dptr
      0000A4 F0               [24]  225 	movx	@dptr,a
      0000A5 08               [12]  226 	inc	r0
      0000A6 E6               [12]  227 	mov	a,@r0
      0000A7 A3               [24]  228 	inc	dptr
      0000A8 F0               [24]  229 	movx	@dptr,a
      0000A9 08               [12]  230 	inc	r0
      0000AA E6               [12]  231 	mov	a,@r0
      0000AB A3               [24]  232 	inc	dptr
      0000AC F0               [24]  233 	movx	@dptr,a
      0000AD 8A 82            [24]  234 	mov	dpl,r2
      0000AF 8B 83            [24]  235 	mov	dph,r3
      0000B1 8E F0            [24]  236 	mov	b,r6
      0000B3 EF               [12]  237 	mov	a,r7
      0000B4 12r00r00         [24]  238 	lcall	___fsgt
      0000B7 E5 82            [12]  239 	mov	a,dpl
      0000B9 60 04            [24]  240 	jz	00106$
      0000BB 7F FF            [12]  241 	mov	r7,#0xff
      0000BD 80 02            [24]  242 	sjmp	00107$
      0000BF                        243 00106$:
      0000BF 7F 00            [12]  244 	mov	r7,#0x00
      0000C1                        245 00107$:
      0000C1 EF               [12]  246 	mov	a,r7
      0000C2 33               [12]  247 	rlc	a
      0000C3 95 E0            [12]  248 	subb	a,acc
      0000C5 FE               [12]  249 	mov	r6,a
      0000C6 FD               [12]  250 	mov	r5,a
      0000C7 FC               [12]  251 	mov	r4,a
      0000C8 A8*00            [24]  252 	mov	r0,_bp
      0000CA 08               [12]  253 	inc	r0
      0000CB EF               [12]  254 	mov	a,r7
      0000CC 26               [12]  255 	add	a,@r0
      0000CD FF               [12]  256 	mov	r7,a
      0000CE EE               [12]  257 	mov	a,r6
      0000CF 08               [12]  258 	inc	r0
      0000D0 36               [12]  259 	addc	a,@r0
      0000D1 FE               [12]  260 	mov	r6,a
      0000D2 ED               [12]  261 	mov	a,r5
      0000D3 08               [12]  262 	inc	r0
      0000D4 36               [12]  263 	addc	a,@r0
      0000D5 FD               [12]  264 	mov	r5,a
      0000D6 EC               [12]  265 	mov	a,r4
      0000D7 08               [12]  266 	inc	r0
      0000D8 36               [12]  267 	addc	a,@r0
      0000D9 8F 82            [24]  268 	mov	dpl,r7
      0000DB 8E 83            [24]  269 	mov	dph,r6
      0000DD 8D F0            [24]  270 	mov	b,r5
      0000DF 12r00r00         [24]  271 	lcall	___slong2fs
      0000E2 AC 82            [24]  272 	mov	r4,dpl
      0000E4 AD 83            [24]  273 	mov	r5,dph
      0000E6 AE F0            [24]  274 	mov	r6,b
      0000E8 FF               [12]  275 	mov	r7,a
      0000E9 80 17            [24]  276 	sjmp	00104$
      0000EB                        277 00102$:
                                    278 ;	floorf.c:40: return r;
      0000EB A8*00            [24]  279 	mov	r0,_bp
      0000ED 08               [12]  280 	inc	r0
      0000EE 86 82            [24]  281 	mov	dpl,@r0
      0000F0 08               [12]  282 	inc	r0
      0000F1 86 83            [24]  283 	mov	dph,@r0
      0000F3 08               [12]  284 	inc	r0
      0000F4 86 F0            [24]  285 	mov	b,@r0
      0000F6 08               [12]  286 	inc	r0
      0000F7 E6               [12]  287 	mov	a,@r0
      0000F8 12r00r00         [24]  288 	lcall	___slong2fs
      0000FB AC 82            [24]  289 	mov	r4,dpl
      0000FD AD 83            [24]  290 	mov	r5,dph
      0000FF AE F0            [24]  291 	mov	r6,b
      000101 FF               [12]  292 	mov	r7,a
      000102                        293 00104$:
      000102 85*00 81         [24]  294 	mov	sp,_bp
      000105 D0*00            [24]  295 	pop	_bp
      000107 C5*00            [12]  296 	xch	a,_bpx
      000109 F8               [12]  297 	mov	r0,a
      00010A 18               [12]  298 	dec	r0
      00010B E2               [24]  299 	movx	a,@r0
      00010C C5*00            [12]  300 	xch	a,_bpx
      00010E 88*00            [24]  301 	mov	_spx,r0
      000110 22               [24]  302 	ret
                                    303 	.area CSEG    (CODE)
                                    304 	.area CONST   (CODE)
                                    305 	.area XINIT   (CODE)
                                    306 	.area CABS    (ABS,CODE)
